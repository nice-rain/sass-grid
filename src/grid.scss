/* SASS Grid will generate a .css file that automatically calculates media queries in order to 
 * correctly center a list of cards in the center of the screen. As the margins change, the 
 * grid will automatically lower the number of cards per column until it reaches a mobile view.
 *
 * Note 1: If you don't want a global box-sizing, make sure to include it within both your item
 * and container tags.
 */

//=======================================================
// Global Variables
//======================================================= 
$max-container-width: 1500px;                   //Maximum supported container size, including border (will round container to nearest size down)
$use-container-max: false !default;             //use our container max width or generate it

$item-width: 320px;                             //Item size including border
$item-height: 50px;
$gutter-width: 25px;                            //This is just a left/right margin. Gutter between items is double this.
$max-items: 5;                                  //Maximum number of columns in a given row

$item-size: $item-width + 2 * $gutter-width;    //Total size of an item + gutter

$mobile-width: 430px;                           //Mobile breakpoint (replaced by item-size if smaller than item-size)

//=======================================================
// Mixin
//=======================================================

//Mixin to insert container into media query
@mixin container($width){
  .container{width:$width}
}

//Mixin that generates our column breaks depending on the number of items
@mixin column-breaks($num-items)
{
  @for $i from 1 through $num-items
  {
    @media screen and (min-width: calculate-min($i)) and (max-width: calculate-max($i)) {@include container(calculate-min($i))}
  }
}

//=======================================================
// Functions
//=======================================================

//Calculates the max number of items per row
@function calculate-item-max()
{
  @if($use-container-max){
    $item-size: $item-width + $gutter-width * 2;
    @return floor($max-container-width / $item-size);

  }
  @else{
    @return $max-items;
  }
}

//Returns our min-width using our item and gutter widths
@function calculate-min($num)
{
  @return $num * $item-width + $num * $gutter-width * 2;
}

//Returns out max-width using our item and gutter widths
@function calculate-max($num)
{
  @return (($num+1) * $item-width + ($num+1) * $gutter-width * 2) - 1;
}

//Calculates our mobile breakpoint correctly
@function calculate-mobile-break()
{
  @if($mobile-width < $item-size)
  {
    @return $item-size;
  }
  @else
  {
    @return $mobile-width;
  }
}

//=======================================================
// CSS
//=======================================================

*{
  box-sizing:border-box;
  margin:0px;
  padding:0px;
}

/*Max Screen Size - 6 items*/
.container {
  margin: 0 auto;                               /* center container */
  width: calculate-item-max() * ($item-width + $gutter-width * 2);                  /*Maximum supported container size*/
  font-size: 0;
  min-height:400px; 
}

/* Item/Card within container */
.item {                            /*Total Size is Width + Left + Right Margin*/
  display: inline-block;
  font-size: 18px;                 /* restore font size removed in container */
  width: $item-width;                    /*Size of the Element with border DEFAULT: 150px*/
  height: $item-height;
  line-height: 50px;
  margin: 15px $gutter-width;               /*Gutter is 25 pixels*/
  text-align: center;
  border: 1px solid black;
}

/* Mobile Screen size */
@media screen and (max-width: calculate-mobile-break()) {
  .container{
    width:100%;
    min-height:0px;
  } 
  .item { 
    width: 100%;
    margin:0px;
  } 
}

//Generate all media queries
@include column-breaks(calculate-item-max());